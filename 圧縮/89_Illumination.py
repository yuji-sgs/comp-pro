"""
JOI 高校の文化祭では毎年廊下に電飾が飾られる．
電飾は N 個の電球で構成されており，電球は廊下の西側から東側に一列に並んでいる．
各電球は明かりがついているか，ついていないかのいずれかの状態である．
JOI 高校の倉庫には電球を操作する機械が眠っている．
この機械は電飾内で連続した電球を指定すると，指定された電球のうち，明かりがついている電球全てを明かりがついていない状態にし，明かりがついていない電球全てを明かりがついている状態にする．
ただし, 機械は老朽化のため, 1 回しか使用できない．
JOI 高校の生徒達は明かりがついている電球とついていない電球が交互に並んだ列（このような電球の列を交互列と呼ぶ）が好きである．
そこで，この機械を必要ならば 1 回だけ使って，できるだけ長い交互列を含む電飾を作ることにした．
電飾の情報が与えられたとき，機械を最大 1 回使用することで得られる電球の配列に含まれる交互列の長さとして考えられるものの最大値を求めるプログラムを作成せよ．
"""

N = int(input())
A = map(int, input().split())

old = '' # 前の要素
cnt = 0
left = [] # 連続する要素数を格納するリスト
for a in A:
    if a == old: # 前の要素と同じなら
        left.append(cnt)
        cnt = 1
    else:
        cnt += 1
    old = a
left.append(cnt)
left += [0,0] # 配列の最後に0を2つ追加（要素数が3以上になることを保証）

ans = 0
for i in range(len(left)-2): 
    ans = max(ans, sum(left[i:i+3]))
print (ans)
