"""
白と黒の碁石をテーブルの上にならべて遊ぶ．まずテーブルの左端に碁石を置く．
次に左から 2 番目の場所に碁石を置く．これを n 回繰り返して n 個の碁石を横一列にならべる．
ただし，新しく i 番目の碁石を置く際には，次のルールに従ってテーブル上の碁石を置き換える．
・i が奇数の場合: テーブルに置いてあった碁石は置き換えず，新しい碁石を左から i 番目に置く．
・i が偶数の場合: 新しく左から i 番目に置く碁石の色とテーブル上の右端の碁石の色が同じ場合は，テーブル上の碁石は置き換えず，新しい碁石を左から i番目に置く. そうでない場合，すなわち，新しく左から i 番目に置く碁石の色
とテーブル上の右端の碁石の色が異なる場合は，まずテーブル上の右端の連続した同色の碁石を全て取り除き,i 番目の碁石と同色の碁石に置き換える．そしてテーブルの右端に i 番目の碁石を置く．
入力として置く碁石の順番が与えられたとき, n 個の碁石をならべ終わった後，テーブル上に置いてある白い碁石の個数を求めるプログラムを作成せよ．
"""

N = int(input())
C = [int(input()) for _ in range(N)] # 0: white, 1: black
stack = [] # 碁石の配置を追跡するため
old = None # 前の色を記録するため

for n in range(N):
    c = C[n]
    if n % 2 == 1: # iが偶数の場合（nが奇数）
        if old != c: # 色が異なる場合
            stack.pop() # 反転させる（最後の反対色の記録を取り除く）
            if len(stack) == 0: # スタックをからにしない
                stack.append(0)
                
    else:
        if old != c: # 違う色の場合
            stack.append(n)  # 色の始まりを記録する
    old = c

if old == 0: # 最後の色が白の場合
    stack.append(n+1) # n+1を記録する
if len(stack) % 2 == 1: 
    stack.insert(0, 0) # スライド2で差分を取るために、要素数を偶数にするために0を追加する
print(sum(stack[1::2]) - sum(stack[::2]))
