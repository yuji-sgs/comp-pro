"""
数字が書かれたカードが N 枚あります。このカードの束（山札）に対して以下の操作が可能です。
・ 山札からカードを 1 枚抜き取り、任意の場所に挿入する。
山札の上から下に向けて、カードを昇順に並べ替えるために必要な、最小の操作回数を求めてください。
"""
import bisect

N = int(input())
C = [int(input()) for _ in range(N)]
INF = 10 ** 10
dp = [INF] * (N+1) # dp[i]: 長さがi+1であるような増加部分列における最終要素の最小値
dp[0] = 0 # dp[0] = 0と初期化するからこそ、配列の長さをN+1に設定
ans = 0

for n in range(N):
    i = bisect.bisect_left(dp, C[n]) # C[n]を挿入できる位置を二分探索して左端のインデックスを取得
    dp[i] = C[n] # C[n]を挿入
    ans = max(ans, i) # 最長の増加部分列の長さを更新
    
print(N - ans)
